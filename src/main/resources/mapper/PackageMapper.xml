<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwg.gp.dao.PackageMapper">
  <resultMap id="BaseResultMap" type="com.dwg.gp.bean.Package">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="merchandise_id" jdbcType="INTEGER" property="merchandiseId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <association property="goods" javaType="com.dwg.gp.bean.Goods">
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, merchandise_id, goods_id, num, state
  </sql>
  <select id="selectByExample" parameterType="com.dwg.gp.bean.PackageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <select id="selectByMerchandiseId" parameterType="int" resultMap="BaseResultMap">
    SELECT goods.`name` name ,package.`merchandise_id`,package.`num`,package.`package_id`,package.`state`
    FROM merchandise , package,goods
	WHERE package.`goods_id`=goods.`id`
	AND package.`merchandise_id`=merchandise.`id`
	AND merchandise.`id`=#{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dwg.gp.bean.PackageExample">
    delete from package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dwg.gp.bean.Package">
    insert into package (package_id, merchandise_id, goods_id, 
      num, state)
    values (#{packageId,jdbcType=INTEGER}, #{merchandiseId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, 1)
  </insert>
  <insert id="insertSelective" parameterType="com.dwg.gp.bean.Package">
    insert into package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        package_id,
      </if>
      <if test="merchandiseId != null">
        merchandise_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        #{packageId,jdbcType=INTEGER},
      </if>
      <if test="merchandiseId != null">
        #{merchandiseId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dwg.gp.bean.PackageExample" resultType="java.lang.Long">
    select count(*) from package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.merchandiseId != null">
        merchandise_id = #{record.merchandiseId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      merchandise_id = #{record.merchandiseId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dwg.gp.bean.Package">
    update package
    <set>
      <if test="merchandiseId != null">
        merchandise_id = #{merchandiseId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dwg.gp.bean.Package">
    update package
    set merchandise_id = #{merchandiseId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateForState" parameterType="int">
    update package
    set state=2
    where package_id=#{id}
  </update>
</mapper>